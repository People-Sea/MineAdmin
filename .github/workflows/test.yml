name: MineAdmin Unit and Ci Test
on:
  push:
    paths:
      - 'app/**'
      - 'config/**'
      - 'composer.*'
      - 'databases/**'
      - 'tests/**'
      - '.github/ci/**'
      - '.github/workflows/test.yml'
  pull_request:
    paths:
      - 'app/**'
      - 'config/**'
      - 'composer.*'
      - 'databases/**'
      - 'tests/**'
      - '.github/ci/**'
      - '.github/workflows/test.yml'
  schedule:
    - cron: '0 2 * * *'
jobs:
  cs-fix:
    name: PHP CS Fix on PHP${{ matrix.php-version }} ${{ matrix.sw-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        php-version: [ '8.1' ]
        sw-version: [ '5.1.3' ]
    env:
      PHP_EXTENSIONS: redis, pdo, pdo_mysql, sqlsrv, pdo_sqlsrv, pdo_odbc, bcmath, swoole-${{ matrix.sw-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Generate PHP_EXTENSIONS Cache Key
        id: ext_key
        run: |
          md5=$(echo -n "${{ env.PHP_EXTENSIONS }}" | md5sum | awk '{print $1}')
          echo "key=${{ matrix.os }}-php-${{ matrix.php-version }}-extensions-$md5" >> $GITHUB_OUTPUT
      - name: Setup PHP Extensions cache environment
        id: php-extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ steps.ext_key.outputs.key }}
      - name: Setup PHP Extensions Cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.php-extcache.outputs.dir }}
          key: ${{ steps.php-extcache.outputs.key }}
          restore-keys: ${{ steps.php-extcache.outputs.key }}
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.1'
          tools: php-cs-fixer
          extensions: redis, pdo, pdo_mysql, bcmath, ${{ matrix.sw-version }}
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "composer_cache_dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Setup composer cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.composer_cache_dir }}
          key: ${{ matrix.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ matrix.os }}-composer-
      - name: Setup Packages
        run: ./.github/ci/requirement.install.sh
      - name: Run CS Fix
        run: |
          vendor/bin/php-cs-fixer fix app --dry-run --diff
  tests-swoole:
    needs: cs-fix
    name: Test on PHP${{ matrix.php-version }} Swoole-${{ matrix.sw-version }}
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        php-version: [ '8.3', '8.2', '8.1' ]
        sw-version: [ '5.0.3', '5.1.6', '6.0.2', 'master' ]
        exclude:
          - php-version: '8.3'
            sw-version: '5.0.3'
      max-parallel: 20
      fail-fast: false
    env:
      SW_VERSION: ${{ matrix.sw-version }}
      MYSQL_VERSION: '8.0'
      PGSQL_VERSION: '14'
      PHP_EXTENSIONS: redis, pdo, pdo_mysql, sqlsrv, pdo_sqlsrv, pdo_odbc, bcmath, swoole-${{ matrix.sw-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Generate PHP_EXTENSIONS Cache Key
        id: ext_key
        run: |
          md5=$(echo -n "${{ env.PHP_EXTENSIONS }}" | md5sum | awk '{print $1}')
          echo "key=${{ matrix.os }}-php-${{ matrix.php-version }}-extensions-$md5" >> $GITHUB_OUTPUT
      - name: Setup PHP Extensions cache environment
        id: php-extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ steps.ext_key.outputs.key }}
      - name: Setup PHP Extensions Cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.php-extcache.outputs.dir }}
          key: ${{ steps.php-extcache.outputs.key }}
          restore-keys: ${{ steps.php-extcache.outputs.key }}
      - name: Setup PHP TS
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: opcache.enable_cli=0
        env:
          phpts: ts
      - name: Setup Swoole
        run: |
          sudo sh -c "echo swoole.use_shortname='Off' >> /etc/php/${{ matrix.php-version }}/cli/conf.d/swoole.ini"
          php --ri swoole
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "composer_cache_dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Setup composer cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.composer_cache_dir }}
          key: ${{ matrix.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ matrix.os }}-composer-
      - name: Setup Packages
        run: ./.github/ci/requirement.install.sh
      - name: Run PHPStan
        run: ./.github/ci/run.check.sh
      - name: Setup Services
        run: ./.github/ci/setup.services.sh
      - name: Setup Mysql
        run: bash ./.github/ci/setup.mysql.sh
      - name: Setup PostgreSQL
        run: bash ./.github/ci/setup.pgsql.sh
      - name: Run Scripts Before Test
        run: cp .github/ci/.env.example .env
      - name: Print PHP Environments
        run: |
          sudo rm -rf /etc/php/${{ matrix.php-version }}/cli/conf.d/20-xdebug.ini
          php -i
          php -m
      - name: Run Mysql Test Cases
        env:
          DB_DRIVER: mysql
          DB_HOST: 127.0.0.1
          DB_DATABASE: mineadmin
        run: ./.github/ci/run.test.sh
      - name: Clear Redis Cache
        run: |
          docker exec redis redis-cli FLUSHALL
          sleep 1
      - name: Run PgSql Test Cases
        env:
          DB_DRIVER: pgsql
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
          DB_CHARSET: utf8
          DB_DATABASE: mineadmin
        run: ./.github/ci/run.test.sh
  tests-swow:
    needs: cs-fix
    name: Test on PHP${{ matrix.php-version }} Swow-${{ matrix.sw-version }}
    runs-on: "${{ matrix.os }}"
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        php-version: [ '8.3', '8.2', '8.1' ]
        sw-version: [ 'develop' ]
        exclude:
          - php-version: '8.3'
            sw-version: '5.0.3'
      max-parallel: 20
      fail-fast: false
    env:
      SW_VERSION: ${{ matrix.sw-version }}
      MYSQL_VERSION: '8.0'
      PGSQL_VERSION: '14'
      PHP_EXTENSIONS: redis, pdo, pdo_mysql, sqlsrv, pdo_sqlsrv, pdo_odbc, bcmath, swow-${{ matrix.sw-version }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Update composer.json
        run: |
          COMPOSER_JSON_PATH="composer.json"
          COMPOSER_JSON_CONTENT=$(cat $COMPOSER_JSON_PATH)
          COMPOSER_DATA=$(echo $COMPOSER_JSON_CONTENT | jq 'del(.require["ext-swoole"])')
          COMPOSER_DATA=$(echo $COMPOSER_DATA | jq '.require["hyperf/engine-swow"] = "*"')
          echo $COMPOSER_DATA | jq '.' > $COMPOSER_JSON_PATH
          cp -f .github/ci/hyperf.php bin/hyperf.php
          cp -f .github/ci/server.php config/autoload/server.php
          cp -f .github/ci/bootstrap.php tests/bootstrap.php
      - name: Generate PHP_EXTENSIONS Cache Key
        id: ext_key
        run: |
          md5=$(echo -n "${{ env.PHP_EXTENSIONS }}" | md5sum | awk '{print $1}')
          echo "key=${{ matrix.os }}-php-${{ matrix.php-version }}-extensions-$md5" >> $GITHUB_OUTPUT
      - name: Setup PHP Extensions cache environment
        id: php-extcache
        uses: shivammathur/cache-extensions@v1
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          key: ${{ steps.ext_key.outputs.key }}
      - name: Setup PHP Extensions Cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.php-extcache.outputs.dir }}
          key: ${{ steps.php-extcache.outputs.key }}
          restore-keys: ${{ steps.php-extcache.outputs.key }}
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}
          extensions: ${{ env.PHP_EXTENSIONS }}
          ini-values: opcache.enable_cli=0
      - name: Install Swow
        run: |
          wget https://github.com/swow/swow/archive/${SW_VERSION}.tar.gz -O swow.tar.gz
          mkdir -p swow
          tar -xf swow.tar.gz -C swow --strip-components=1
          rm swow.tar.gz
      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "composer_cache_dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT
      - name: Setup composer cache
        uses: actions/cache@v4
        with:
          path: ${{ steps.composer-cache.outputs.composer_cache_dir }}
          key: ${{ matrix.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ matrix.os }}-composer-
      - name: Setup Packages
        run: ./.github/ci/requirement.install.sh
      - name: Run PHPStan
        run: ./.github/ci/run.check.sh
      - name: Setup Services
        run: ./.github/ci/setup.services.sh
      - name: Setup Mysql
        run: bash ./.github/ci/setup.mysql.sh
      - name: Setup PostgreSQL
        run: bash ./.github/ci/setup.pgsql.sh
      - name: Run Scripts Before Test
        run: cp .github/ci/.env.example .env
      - name: Print PHP Environments
        run: |
          sudo rm -rf /etc/php/${{ matrix.php-version }}/cli/conf.d/20-xdebug.ini
          php -i
          php -m
      - name: Run Mysql Test Cases
        env:
          DB_DRIVER: mysql
          DB_HOST: 127.0.0.1
          DB_DATABASE: mineadmin
        run: |
          vendor/bin/phpunit --group=migrations --bootstrap tests/bootstrap.php --configuration phpunit.xml.dist --colors=always
          vendor/bin/phpunit --exclude-group=migrations --bootstrap tests/bootstrap.php --configuration phpunit.xml.dist --colors=always
      - name: Clear Redis Cache
        run: |
          docker exec redis redis-cli FLUSHALL
          sleep 1
      - name: Run PgSql Test Cases
        env:
          DB_DRIVER: pgsql
          DB_HOST: 127.0.0.1
          DB_PORT: 5432
          DB_USERNAME: postgres
          DB_PASSWORD: postgres
          DB_CHARSET: utf8
          DB_DATABASE: mineadmin
        run: |
          vendor/bin/phpunit --group=migrations --bootstrap tests/bootstrap.php --configuration phpunit.xml.dist --colors=always
          vendor/bin/phpunit --exclude-group=migrations --bootstrap tests/bootstrap.php --configuration phpunit.xml.dist --colors=always